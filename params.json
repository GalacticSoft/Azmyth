{"name":"Azmyth","tagline":"","body":"# ![Alt text](http://i.imgur.com/3ZGERJM.png)\r\nAzmyth is a generic game framework used to create flexible RPG and adventure style games using procedural content generation.  \r\n\t\r\n#### Features include:\r\n- Extensible Asset system.\r\n- Perlin Noise, Simplex Noise, Random Noise\r\n- Terrain generation using Perlin Noise and QuadTrees.\r\n- Flexible Stat/Attribute system.\r\n- Markov Chain name/text generator.\r\n- Chunk loading.\r\n\r\n#### Planned Features:\r\n- Biomes.\r\n- Procedurally generated Cities and Economic simulation.\r\n- Races and Classes.\r\n- Additional Noise generators (Worley/Voronoi, Wavelet, etc).\r\n- Procedurally generated NPCS, Items, Quests.\r\n- Dynamic Chunk Loading.\r\n\r\n#### Code Samples\r\n\r\n- Creating a World and Loading Chunks\r\n\r\n\t\t//Create World with random seed\r\n\t\tWorld world = new World(12345);\r\n\t\t\r\n\t\t//Set parameters\r\n\t\tworld.CoastLine = 0.00f;  //Coast starts at height 0\r\n\t\tworld.ShoreLine = 0.05f;  //Shore line is 5% higher than coast line\r\n\t\tworld.TreeLine  = 0.40f;  //Tree line is 40% higher than coast line\r\n\t\tworld.SnowLine  = 0.50f;  //Snow line is 50% higher than coast line\r\n\t\t\r\n\t\t//Load 50x50 chunk at tile 0, 0\r\n\t\tTerrainChunk chunk = world.LoadChunk(new RectangleF(0, 0, 50, 50));\r\n\t\t\r\n\t\t//Load 10x10 chunk at tile 5, 6\r\n\t\tTerrainChunk chunk2 = world.LoadChunk(new RectangleF(5, 6, 10, 10));\r\n\t\t\r\n\t\t//Load 100x100 chunk at tile 0, 0\r\n\t\tTerrainChunk chunk3 = world.LoadChunk(new RectangleF(100, 100, 100, 100));\r\n\r\n- Chunk Loading\r\n\r\n\t\t/// <summary>\r\n\t\t/// Loads tiles from world that are contained within chunkBounds\r\n\t\t/// </summary>\r\n\t\t/// <param name=\"world\"></param>\r\n\t\t/// <param name=\"chunkBounds\"></param>\r\n\t\tpublic TerrainChunk(World world, RectangleF chunkBounds) : this()\r\n\t\t{\r\n\t\t    //Calculate total tiles in chunk\r\n\t\t    int totalTiles = (int)chunkBounds.Width * (int)chunkBounds.Height;\r\n\t\t\r\n\t\t    //Loop through each tile\r\n\t\t    for (int index = 0; index < totalTiles; index++)\r\n\t\t    {\r\n\t\t        //Convert index value into x and y coordinates.\r\n\t\t        int cellX = (int)((index / chunkBounds.Height)) + (int)chunkBounds.X;\r\n\t\t        int cellY = (int)((index % chunkBounds.Height)) + (int)chunkBounds.Y;\r\n\t\t\r\n\t\t        //Load tile.\r\n\t\t        TerrainTile tile = world.LoadTile(cellX, cellY, this);\r\n\t\t\r\n\t\t        //Insert new tile into chunk QuadTree\r\n\t\t        m_tiles.Insert(tile);\r\n\t\t     }\r\n\t\t\r\n\t\t     //Assign local variables\r\n\t\t     m_world = world;\r\n\t\t     m_bounds = chunkBounds;\r\n\t\t}\r\n\r\n- Chunk Rendering\r\n\r\n\t\t/// <summary>\r\n\t\t/// Draws the loaded chunks visible in the viewport\r\n\t\t/// </summary>\r\n\t\tpublic void Draw()\r\n\t\t{\r\n\t\t    //Convert the viewport rectangle into tiles\r\n\t\t    RectangleF viewportRect = ScreenToTile(new Rectangle(Viewport.X, \r\n\t\t        Viewport.Y, Viewport.Width, Viewport.Height));\r\n\t\t \r\n\t\t    //Load only the chunks visible in the viewport. (Includes partial chunks)\r\n\t\t    List<TerrainChunk> chunks = m_world.GetChunks(viewportRect);\r\n\t\t\r\n\t\t    m_spriteBatch.Begin(SpriteSortMode.Deferred, \r\n\t\t        null, null, null, null, null, Matrix.CreateTranslation(0, 0, 0));\r\n\t\t\r\n\t\t    //Loop through each visible chunk.\r\n\t\t    foreach (TerrainChunk chunk in chunks)\r\n\t\t    {\r\n\t\t        //Load only tiles visible in the viewport. (Includes partial tiles)\r\n\t\t        List<TerrainTile> tiles = chunk.GetTiles(viewportRect);\r\n\t\t\r\n\t\t        //Loop through each visible tile.\r\n\t\t        foreach (TerrainTile t in tiles)\r\n\t\t        {\r\n\t\t            //Draw tile to screen.\r\n\t\t            m_spriteBatch.Draw(m_cellTextures[t.Terrain], \r\n\t\t                TileToScreen(t.Bounds), Color.White);\r\n\t\t\r\n\t\t            //Add any additional rendering for tiles here.\r\n\t\t        }\r\n\t\t\r\n\t\t        // Add any additional rendering for chunks here.\r\n\t\t    }\r\n\t\t\r\n\t\t    m_spriteBatch.End();\r\n\t\t}\r\n\r\n#### XNA\r\n- Intro\r\n![ScreenShot](http://i.imgur.com/4jJVU4e.png)\r\n![ScreenShot](http://i.imgur.com/kjeI0zo.png)\r\n\r\n- Chunk Loading\r\n![ScreenShot](http://i.imgur.com/dXJ3UPk.png)\r\n![ScreenShot](http://i.imgur.com/nkxVyAN.png)\r\n\r\n- Mini Map\r\n![ScreenShot](http://i.imgur.com/9FyRYfY.png)\r\n![ScreenShot](http://i.imgur.com/zuaQza5.png)\r\n\r\n#### GDI\r\n- Terrain Map\r\n![ScreenShot](http://i.imgur.com/V0Nfvx6.png)\r\n\r\n- Height Map\r\n![ScreenShot](http://i.imgur.com/9lYTbOv.png)\r\n\r\n- Temperature Map\r\n![ScreenShot](http://i.imgur.com/PQq61hR.png)\r\n\r\n#### License & Copyright\r\n\r\nCopyright (c) 2014 Marissa du Bois\r\n\r\nThe MIT License (MIT)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n#### Author\r\n<p>\r\n<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\r\n<tr  width=\"100%\" height=\"211px\" cellpadding=\"0\" cellspacing=\"0\">\r\n<td cellpadding=\"0\" cellspacing=\"0\" height=\"211px\" width=\"135px\"><center><img src=\"http://i.imgur.com/H98nfdu.jpg\"  /></center></td>\r\n<td >\r\n<strong>Marissa Willow du Bois</strong>\r\n<br>\r\nMarissa is an avid programmer and has been developing software for the past sixteen years. She is currently employed as a programmer analyst developing accounting software for the wine industry.\r\n<br>\r\n<br>\r\n<strong>Contact:</strong> marissa@galacticsoft.net\r\n<br>\r\n<strong>Website:</strong> http://www.galacticsoft.net\r\n</td>\r\n</tr>\r\n</table>\r\n<p>\r\n","google":"UA-56242923-1","note":"Don't delete this file! It's used internally to help with page regeneration."}